{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Using the XNET API","text":"<p>This website is intended for people accessing the XNET API's and provides documentation and guidance on how to use it.</p> <p>All of the available API services are documented in the API Spec page. To learn on how to access it, see below.</p> <p>XNET is pretty young, so at this stage you'll be experiencing the beginnings of the ecosystem. This means that the API is pretty basic at the moment, but we'll be expanding it further as we go. Feedback, ideas and suggestions are very welcome!</p>"},{"location":"#api-access","title":"API Access","text":"<p>The XNET API is accessible through the <code>https://services.xnetmobile.com</code> endpoint. </p> <p>The XNET API's access is restricted to registered users. In case you don't have access yet, make sure to request your API access through our Discord server.</p> <p>Registered users get a unique <code>client_id</code> and <code>client_secret</code> to be used to access this API.</p> <p>Using your credentials, you'll need to get an access token from the XNET Authorization Server before making a request to the XNET API. This is really simple and we provide some examples below.</p>"},{"location":"#example-api-request","title":"Example API Request","text":"<p>As an example to get information about your XNODE, you'd make two requests. The first one to authenticate and the second one to the API service. </p> <p>The code snippets below provide examples on getting an overview about your XNODE. These are just example snippets for demonstration purposes, but in case you reuse them, just make sure to set the <code>&lt;XNETAPI_XNODE_ID&gt;</code>, <code>&lt;XNETAPI_CLIENT_ID&gt;</code> and <code>&lt;XNETAPI_CLIENT_SECRET&gt;</code> parameters with your input as OS Environment Variables.</p>"},{"location":"#linux-shell","title":"Linux shell","text":"getXnodeOverview.sh<pre><code>#!/bin/sh\n\n# Collect input parameters from the OS Environment Variables\n\nXNODE_ID=\"$XNETAPI_XNODE_ID\"\nif [ -z \"$XNODE_ID\" ]; then\necho 'Error: XNETAPI_XNODE_ID environment variable is not set' &amp;&amp; exit 1\nfi\n\nCLIENT_ID=\"$XNETAPI_CLIENT_ID\"\nif [ -z \"$CLIENT_ID\" ]; then\necho 'Error: XNETAPI_CLIENT_ID environment variable is not set' &amp;&amp; exit 1\nfi\n\nCLIENT_SECRET=\"$XNETAPI_CLIENT_SECRET\"\nif [ -z \"$CLIENT_SECRET\" ]; then\necho 'Error: XNETAPI_CLIENT_SECRET environment variable is not set' &amp;&amp; exit 1\nfi\n\n# Fixed parameters\n\nAUTH_SERVICE=https://services.xnetmobile.com/v1/auth/token\nAPI_SERVICE=\"https://services.xnetmobile.com/v1/xsite/${XNODE_ID}\"\nSCOPE='xnet-external-api'\nGRANT_TYPE='client_credentials'\n\n# Request access token from XNET Authorization Server\n\nACCESS_TOKEN=$(curl -s \\\n\"${AUTH_SERVICE}\" \\\n-d \"grant_type=${GRANT_TYPE}\" \\\n-d \"scope=${SCOPE}\" \\\n-d \"client_id=${CLIENT_ID}\" \\\n-d \"client_secret=${CLIENT_SECRET}\" | awk -F'\"' '{print $4}')\n\nif [ \"$ACCESS_TOKEN\" = 'none' ]; then\necho 'Error: Authorization failed. Check your credentials before trying again'\nexit 1\nfi\n\n# Request API Service using the access token\n\ncurl -i -s \\\n\"${API_SERVICE}\" \\\n-H \"Authorization: Bearer ${ACCESS_TOKEN}\"\n</code></pre>"},{"location":"#typescript","title":"Typescript","text":"getXnodeOverview.ts<pre><code>// Collect parameter input from the OS Environment Variables\nconst xnodeId      = process.env.XNETAPI_XNODE_ID;\nif (!xnodeId) {\nconsole.error(\"Error: XNETAPI_XNODE_ID environment variable is not set.\");\nprocess.exit(1);\n}\n\nconst clientId     = process.env.XNETAPI_CLIENT_ID;\nif (!clientId) {\nconsole.error(\"Error: XNETAPI_CLIENT_ID environment variable is not set.\");\nprocess.exit(1);\n}\n\nconst clientSecret = process.env.XNETAPI_CLIENT_SECRET;\nif (!clientSecret) {\nconsole.error(\"Error: XNETAPI_CLIENT_SECRET environment variable is not set.\");\nprocess.exit(1);\n}\n\n// Fixed parameters\nconst authService  = 'https://services.xnetmobile.com/v1/auth/token';\nconst apiService   = 'https://services.xnetmobile.com/v1/xsite/';\nconst scope        = 'xnet-external-api';\nconst grant_type   = 'client_credentials';\n\n// Some var initiatilization\nlet accessToken    = '';\nlet expiresAt      = 0;\n\n// Request access token from the XNET Authorization Server\nasync function getAccessToken() {\ntry {\nconst authResponse = await fetch(authService, {\nmethod: \"POST\",\nheaders: {\n\"Content-Type\": \"application/x-www-form-urlencoded\",\n},\nbody: `grant_type=${grant_type}&amp;scope=${scope}&amp;client_id=${clientId}&amp;client_secret=${clientSecret}`,\n});\nconst authData = await authResponse.json();\nif (!authResponse.ok) {\nthrow new Error(`Authentication failed. Check your credentials before trying again. Status code: ${authResponse.status}`);\n}\naccessToken = authData.access_token;\nexpiresAt = Date.now() + authData.expires_in * 1000;\n} catch (error) {\nconsole.error(error);\n}\n}\n\n// Request API Service using the access token\nasync function getData(xnodeId) {\nlet apiServiceUrl=`${apiService}${xnodeId}`\nif (expiresAt &lt; Date.now()) {\nawait getAccessToken();\n}\n\ntry {\nconst response = await fetch(apiServiceUrl, {\nheaders: {\nAuthorization: `Bearer ${accessToken}`,\n},\n});\nconst data = await response.json();\nconsole.log(JSON.stringify(data, null, 2));\n} catch (error) {\nconsole.error(error);\n}\n}\n\ngetData(xnodeId);\n</code></pre>"},{"location":"#python","title":"Python","text":"getXnodeOverview.py<pre><code>import os\nimport requests\nimport json\nimport time\n\n# Collect input parameters from the OS Environment Variables\nxnode_id = os.environ.get(\"XNETAPI_XNODE_ID\")\nif not xnode_id:\n    print('Error: XNETAPI_XNODE_ID environment variable is not set.')\n    exit(1)\n\nclient_id = os.environ.get(\"XNETAPI_CLIENT_ID\")\nif not client_id:\n    print('Error: XNETAPI_CLIENT_ID environment variable is not set.')\n    exit(1)\n\nclient_secret = os.environ.get(\"XNETAPI_CLIENT_SECRET\")\nif not client_secret:\n    print('Error: XNETAPI_CLIENT_SECRET environment variable is not set.')\n    exit(1)\n\n# Fixed parameters\n\nauth_server = 'https://services.xnetmobile.com/v1/auth/token'\nauth_scope = 'xnet-external-api'\nauth_grant_type = 'client_credentials'\napi_url = 'https://services.xnetmobile.com/v1/xsite/'\n\n# Some var initiatilization\n\naccess_token = \"\"\nexpires_at = 0\n\n# Request access token from the XNET Authorization Server\n\n\ndef get_access_token():\n    global access_token, expires_at\n    try:\n        auth_response = requests.post(auth_server, data={\n            \"client_id\": client_id,\n            \"client_secret\": client_secret,\n            \"scope\": auth_scope,\n            \"grant_type\": auth_grant_type\n        })\n        if auth_response.status_code != 200:\n            print('Authentication failed. Check your credentials before trying again. Status code: ' + str(auth_response.status_code))\n            exit(1)\n        auth_data = json.loads(auth_response.text)\n        access_token = auth_data[\"access_token\"]\n        expires_at = int(auth_data[\"expires_in\"])\n    except Exception as error:\n        print(f\"Error: {error}\")\n\n# Request API Service using the access token\n\n\ndef get_data():\n    global access_token, expires_at\n    if expires_at &lt; int(time.time()):\n        get_access_token()\n    try:\n        api_service_url = api_url + xnode_id\n        response = requests.get(api_service_url, headers={\n            \"Authorization\": f\"Bearer {access_token}\"\n        })\n        data = json.loads(response.text)\n        print(data)\n    except Exception as error:\n        print(f\"Error: {error}\")\n\n\nget_data()\n</code></pre>"},{"location":"#go","title":"Go","text":"getXnodeOverview.go<pre><code>package main\n\nimport (\n\"context\"\n\"fmt\"\n\"io/ioutil\"\n\"log\"\n\"os\"\n\n\"golang.org/x/oauth2/clientcredentials\"\n)\n\n// Fixed parameters\nconst apiUrl = \"https://services.xnetmobile.com/v1/xsite/\"\n\n// Var initialization\nvar apiServiceUrl = \"\"\n\nfunc main() {\n\n// Collect input parameters from the OS Environment Variables\nxnodeId := os.Getenv(\"XNETAPI_XNODE_ID\")\nif xnodeId == \"\" {\nlog.Fatalf(\"XNETAPI_XNODE_ID environment variable is not set.\")\n}\n\nclientId := os.Getenv(\"XNETAPI_CLIENT_ID\")\nif clientId == \"\" {\nlog.Fatalf(\"XNETAPI_CLIENT_ID environment variable is not set.\")\n}\n\nclientSecret := os.Getenv(\"XNETAPI_CLIENT_SECRET\")\nif clientSecret == \"\" {\nlog.Fatalf(\"XNETAPI_CLIENT_SECRET environment variable is not set.\")\n}\n\nctx := context.Background()\n\n// OAuth2.0 Client Credentials Flow configuration\nconf := clientcredentials.Config{\nClientID:     clientId,\nClientSecret: clientSecret,\nScopes:       []string{\"xnet-external-api\"},\nTokenURL:     \"https://services.xnetmobile.com/v1/auth/token\",\n}\n\n// Request access token from the XNET Authorization Server\n_, err := conf.Token(ctx)\nif err != nil {\nlog.Fatalf(\"Authentication failed. Check your credentials before trying again. %v\", err)\n}\n\n// Request API Service using the access token\napiServiceUrl = apiUrl + xnodeId\nclient := conf.Client(ctx)\nresp, err := client.Get(apiServiceUrl)\nif err != nil {\nlog.Fatalf(\"Could not make API call: %v\", err)\n}\ndefer resp.Body.Close()\nif resp.StatusCode != 200 {\nlog.Fatalf(\"unexpected HTTP status code: %d\", resp.StatusCode)\n}\nbody, err := ioutil.ReadAll(resp.Body)\nif err != nil {\nlog.Fatalf(\"could not read response body: %v\", err)\n}\nfmt.Printf(\"%s\", body)\n}\n</code></pre>"},{"location":"#auth-detail","title":"Auth Detail","text":"<p>The detail below might be relevant for you when you're developing your own app which will be using the XNET API.</p> <p>The XNET API's are authenticated with OAuth 2.0 Authorization Framework  using the Client Credentials flow as per RFC6749. </p> <pre><code> +---------+                                  +---------------+\n |         |                                  |               |\n |         |&gt;--(A)- Client Authentication ---&gt;|     XNET      |\n |         |                                  | Authorization |\n |         |&lt;--(B)---- Access Token ---------&lt;|     Server    |\n |         |                                  |               |\n |         |                                  +---------------+\n | Client  |\n |         |                                                      +---------------+\n |         |                                                      |               |\n |         |&gt;--(C)--------- Request with access token -----------&gt;|               |\n |         |                                                      |   XNET API    |\n |         |&lt;--(D)----------------- Response --------------------&lt;|               |\n |         |                                                      |               |\n +---------+                                                      +---------------+\n</code></pre> <p>(A) The first one to get your access token. Step (A) from the diagram above.</p> <pre><code>Endoint:               https://services.xnetmobile.com\nHTTP Method:           POST \nURI:                   /v1/auth/token\nContent-Type:          application/x-www-form-urlencoded\n\nRequest payload:\nclient_id=&lt;XNETAPI_CLIENT_ID&gt;&amp;client_secret=&lt;XNETAPI_CLIENT_SECRET&gt;&amp;scope=xnet-external-api&amp;grant_type=client_credentials\n</code></pre> <p>(B) If the authentication is successful, the response will have the following format:</p> <pre><code>HTTP Status:           200 OK\nContent-Type:          application/json\nx-ratelimit-limit:     6\nx-ratelimit-remaining: 5\n\nResponse payload:\n{\"access_token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\",\"expires_in\":300,\"refresh_expires_in\":0,\"token_type\":\"Bearer\",\"not-before-policy\":0,\"scope\":\"email xnet-external-api profile\"}\n</code></pre> <p>(C) And then use the resulting access_token to request the service from the API.</p> <pre><code>Endoint:               https://services.xnetmobile.com\nHTTP Method:           GET \nURI:                   /v1/xsite/some-xnode-id-1337\nAuthorization:         Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\n</code></pre> <p>(D) The API then responds according to the API Spec for that request.</p> <p>The API will only provide a successful response if the request is made with a valid access token.</p> <p>In case an API request is made without the access token or with an invalid one, the API responds with the <code>401</code> HTTP Status Code.</p> <p>In order to get a successful response from the API, the <code>Authorization</code> header must be provided in the following format: </p> <pre><code>Authorization: Bearer &lt;ACCESS_TOKEN&gt;\n</code></pre> <p>Where <code>&lt;ACCESS_TOKEN&gt;</code> is a valid jwt token which has been previously provided by the XNET Authorization Server.</p> <p>Token Expiry</p> <p>Do note that the access tokens expire every 300 seconds. New access tokens have to be requested before its expiry. Some packages implement refresh management such as the oauth2 package in go, for instance (example provided in the go snippet above).</p> <p>Access tokens must be reused while they're valid. Currently, only 6 auth requests per minute are allowed, while 200 API requests per minute are allowed.</p> <p>The API responds with <code>x-ratelimit-limit</code> and <code>x-ratelimit-remaining</code> HTTP headers.</p> <p><code>x-ratelimit-limit</code> informs about the maximum number of requests per minute</p> <p><code>x-ratelimit-remaining</code> informs about the number of requests per minute that are still allowed</p>"},{"location":"about/","title":"About XNET","text":"<p>XNET is empowering the community to augment the 4G and 5G connectivity experience across the USA.</p> <p>In order to learn more about XNET visit the official website.</p>"},{"location":"about/#getting-in-touch","title":"Getting in touch","text":"<p>In case this documentation isn't enough, get in touch with our community through our Discord server. </p>"},{"location":"about/#apps-using-this-api","title":"Apps using this API","text":"<p>Some of the apps known to be using this API are listed below:</p> <p>XNET Explorer</p>"},{"location":"api-spec/","title":"API Spec","text":""},{"location":"api-spec/#get-access-token","title":"Get Access Token","text":""},{"location":"api-spec/#request","title":"Request","text":"<pre><code>POST https://services.xnetmobile.com/v1/auth/token\n</code></pre>"},{"location":"api-spec/#responses","title":"Responses","text":""},{"location":"api-spec/#200-ok","title":"200 OK","text":"<pre><code>{\n\"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\",\n\"expires_in\": 300,\n\"refresh_expires_in\": 0,\n\"token_type\": \"Bearer\",\n\"not-before-policy\": 0,\n\"scope\": \"email xnet-external-api profile\"\n}\n</code></pre>"},{"location":"api-spec/#401-unauthorized","title":"401 Unauthorized","text":"<p>Wrong or invalid input has been provided. Check Using the XNET API</p>"},{"location":"api-spec/#503-service-unavailable","title":"503 Service Unavailable","text":"<p>Rate limit has been exceeded. You may consult the <code>x-ratelimit-limit</code> and <code>x-ratelimit-remaining</code> headers. Check Using the XNET API</p>"},{"location":"api-spec/#get-list-of-all-xnode-ids","title":"Get List of All XNODE IDs","text":""},{"location":"api-spec/#request_1","title":"Request","text":"<pre><code>GET https://services.xnetmobile.com/v1/xsite/xnodes\n</code></pre>"},{"location":"api-spec/#responses_1","title":"Responses","text":""},{"location":"api-spec/#200-ok_1","title":"200 OK","text":"<pre><code>{\n\"request\": {\n\"schema\": \"1.0\",\n\"request\": \"/v1/xsite/xnodes\",\n\"timestamp\": 1665340858\n},\n\"count\": 4,\n\"xnodeids\": [\n\"dragon-ball-original-1986\",\n\"dragon-ball-z-1989\",\n\"dragon-ball-gt-1996\",\n\"dragon-ball-super-2015\"\n]\n}\n</code></pre>"},{"location":"api-spec/#401-unauthorized_1","title":"401 Unauthorized","text":"<p>Access token is invalid or has not been provided. Check Using the XNET API</p>"},{"location":"api-spec/#503-service-unavailable_1","title":"503 Service Unavailable","text":"<p>Rate limit has been exceeded. You may consult the <code>x-ratelimit-limit</code> and <code>x-ratelimit-remaining</code> headers. Check Using the XNET API</p>"},{"location":"api-spec/#xsite-information","title":"XSITE Information","text":""},{"location":"api-spec/#request_2","title":"Request","text":"<pre><code>GET https://services.xnetmobile.com/v1/xsite/{xnodeId}\n</code></pre>"},{"location":"api-spec/#description","title":"Description","text":"<p>Where <code>{xnodeId}</code> is an XNODE ID.</p>"},{"location":"api-spec/#responses_2","title":"Responses","text":""},{"location":"api-spec/#200-ok_2","title":"200 OK","text":"<pre><code>{\n\"request\": {\n\"schema\": \"1.0\",\n\"request\": \"/v1/xsite/dragon-ball-super-2015\",\n\"timestamp\": \"1675801741\"\n},\n\"xsite\": {\n\"xsiteid\": \"afa1d822-6b3d-4a15-86eb-d5ba1dbf9e81\",\n\"ethwallet\": {\n\"ethaddress\": \"0xd0C75df73a5fd87a35fd8a3765dfaf36d5fa6785\",\n\"ethpublickey\": \"0x04ebda27ea32514ef3a51ef3a5421efa5421efa542e13af5124ef3a512e43fa512e3f5124e3af5124efa123e6851348613461854afa6f36152fa36125f43a32123\"\n},\n\"xnode\": {\n\"count\": 1,\n\"xnodes\": [\n{\n\"xnodeid\": \"dragon-ball-super-2015\",\n\"macaddress\": \"00:ca:fe:be:ef:00\",\n\"hardware\": \"namek\",\n\"firmware\": \"piccolo\",\n\"provisioned\": true,\n\"registered\": true,\n\"status\": {\n\"state\": \"up\",\n\"lastseen\": 1675801705,\n\"lastupdated\": 1675760820\n}\n}\n]\n},\n\"radio\": {\n\"count\": 1,\n\"radios\": [\n{\n\"radioid\": \"ac2be1e0-33ac-45ec-89d9-f7a785c15004\",\n\"xnodeid\": \"dragon-ball-super-2015\",\n\"macaddress\": \"00:be:ef:ca:fe:00\",\n\"vendorname\": \"SomeRadioVendor\",\n\"vendormodel\": \"Nimbus\",\n\"vendorfirmware\": \"kakarot_2.1\",\n\"vendorsn\": \"3216487614FDS13\",\n\"provisioned\": true,\n\"registered\": true,\n\"status\": {\n\"state\": \"up\",\n\"lastseen\": 1675801708,\n\"location\": {\n\"lat\": \"12.123456\",\n\"lng\": \"-123.123456\",\n\"aglm\": \"NaN\"\n}\n}\n}\n]\n}\n}\n}\n</code></pre>"},{"location":"api-spec/#401-unauthorized_2","title":"401 Unauthorized","text":"<p>Access token is invalid or has not been provided. Check Using the XNET API</p>"},{"location":"api-spec/#404-not-found","title":"404 Not Found","text":"<p>The specified <code>{xnodeId}</code> was not found</p>"},{"location":"api-spec/#503-service-unavailable_2","title":"503 Service Unavailable","text":"<p>Rate limit has been exceeded. You may consult the <code>x-ratelimit-limit</code> and <code>x-ratelimit-remaining</code> headers. Check Using the XNET API</p>"}]}